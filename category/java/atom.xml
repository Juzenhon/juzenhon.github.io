<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>黑色红桃7 • Posts by &#34;java&#34; category</title>
    <link href="http://example.com" />
    <updated>2018-02-11T05:06:28.000Z</updated>
    <entry>
        <id>http://example.com/2018-2-11-daemon-thread/</id>
        <title>java守护线程</title>
        <link rel="alternate" href="http://example.com/2018-2-11-daemon-thread/"/>
        <content type="html">&lt;h3 id=&#34;守护线程&#34;&gt;&lt;a href=&#34;#守护线程&#34; class=&#34;headerlink&#34; title=&#34;守护线程&#34;&gt;&lt;/a&gt;守护线程&lt;/h3&gt;&lt;p&gt;线程分为前台线程（用户线程）与后台线程（守护线程），守护线程并不常用，他主要为其他对像或用户线程提供服务。一般的守护线程如   jvm垃圾回收线程，和内存管理线程等。&lt;br&gt;守护线程具有最低的优先级，他不依赖于终端，但依赖于虚拟机。 而jvm的退出是以用户线程的运行结束为终止的。&lt;/p&gt;
&lt;h3 id=&#34;使用方法&#34;&gt;&lt;a href=&#34;#使用方法&#34; class=&#34;headerlink&#34; title=&#34;使用方法&#34;&gt;&lt;/a&gt;使用方法&lt;/h3&gt;&lt;figure class=&#34;highlight lasso&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs lasso&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;Thread&lt;/span&gt; th = &lt;span class=&#34;hljs-literal&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;Thread&lt;/span&gt;();&lt;br&gt;th.setDaemon(&lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;); &lt;span class=&#34;hljs-comment&#34;&gt;//设置为守护线程&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;setDaemon方法必须要在start方法之前调，否则会产生illegalThreadStateException;&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;p&gt;对于jre来说程序的运行结束的标志是所有前台线程的运行结束，而不管守护线程是否运行完。&lt;/p&gt;
&lt;p&gt;当前台线程运行完成时，程序就自动终止了，因此不要在守护线程中做文件，输入输出等操作。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    Thread daemon_th =  &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Thread(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;daemon thread start&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                Thread.sleep(&lt;span class=&#34;hljs-number&#34;&gt;1000&lt;/span&gt;);&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;daemon thread finished&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;);&lt;br&gt;    daemon_th.setDaemon(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;    Thread work_th =  &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Thread(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;work thread finished&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;);&lt;br&gt;    daemon_th.start();&lt;br&gt;    work_th.start();&lt;br&gt;    System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;main thread finished&amp;quot;&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;运行结果为:&lt;br&gt;daemon thread start&lt;br&gt;work thread finished&lt;br&gt;main thread finished&lt;/p&gt;
&lt;h3 id=&#34;应用场景&#34;&gt;&lt;a href=&#34;#应用场景&#34; class=&#34;headerlink&#34; title=&#34;应用场景&#34;&gt;&lt;/a&gt;应用场景&lt;/h3&gt;&lt;p&gt;由于以上的特点，守护线程不适合做资源申请回收相关的操作。适合做为其他线程服务的工作。&lt;/p&gt;
&lt;p&gt;如java的垃圾回收线程就是典型的守护线程。&lt;/p&gt;
</content>
        <updated>2018-02-11T05:06:28.000Z</updated>
    </entry>
</feed>
