<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>黑色红桃7 • Posts by &#34;golang&#34; category</title>
    <link href="http://example.com" />
    <updated>2021-04-23T12:22:42.000Z</updated>
    <entry>
        <id>http://example.com/2021-04-23-go-dynamic-type-md/</id>
        <title>go接口动态类型</title>
        <link rel="alternate" href="http://example.com/2021-04-23-go-dynamic-type-md/"/>
        <content type="html">&lt;h3 id=&#34;接口使用&#34;&gt;&lt;a href=&#34;#接口使用&#34; class=&#34;headerlink&#34; title=&#34;接口使用&#34;&gt;&lt;/a&gt;接口使用&lt;/h3&gt;&lt;p&gt;golang的接口与java里的接口使用上比较相似, 写一个简单的demo&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;package&lt;/span&gt; main&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; (&lt;br&gt;	&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; Animal &lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &amp;#123;&lt;br&gt;	sing()&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; Bird &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	color &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;	weight &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;(p Bird)&lt;/span&gt;&lt;span class=&#34;hljs-title&#34;&gt;sing&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	fmt.Println( &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;zhi-zhi&amp;quot;&lt;/span&gt;)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; Cat &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	color &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;(p Cat)&lt;/span&gt;&lt;span class=&#34;hljs-title&#34;&gt;sing&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	fmt.Println( &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;miao-mi&amp;quot;&lt;/span&gt;)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; anim Animal&lt;br&gt;	fmt.Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%T, %v\n&amp;quot;&lt;/span&gt;, anim, anim)&lt;br&gt;	anim = Bird&amp;#123;color: &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, weight: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;&amp;#125;&lt;br&gt;	fmt.Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%T, %v\n&amp;quot;&lt;/span&gt;, anim, anim)&lt;br&gt;	anim = Cat&amp;#123;color: &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;#125;&lt;br&gt;	fmt.Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%T, %v\n&amp;quot;&lt;/span&gt;, anim, anim)&lt;br&gt;	anim.sing()&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//打印结果:&lt;/span&gt;&lt;br&gt;&amp;lt;&lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt;&amp;gt;, &amp;lt;&lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt;&amp;gt;&lt;br&gt;main.Bird, &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;&amp;#125;&lt;br&gt;main.Cat, &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;#125;&lt;br&gt;miao-mi&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;实现分析&#34;&gt;&lt;a href=&#34;#实现分析&#34; class=&#34;headerlink&#34; title=&#34;实现分析&#34;&gt;&lt;/a&gt;实现分析&lt;/h3&gt;&lt;p&gt;反汇编一下代码，找到**anim = Bird{color: 1, weight: 100}**这行代码&lt;/p&gt;
&lt;figure class=&#34;highlight x86asm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs x86asm&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0305&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00773&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;XORPS&lt;/span&gt;   X0, X0&lt;br&gt;//在地址autotmp_27上构造一个Bird&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0308&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00776&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVUPS&lt;/span&gt;  X0, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_27+&lt;span class=&#34;hljs-number&#34;&gt;144&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0310&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00784&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$1&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_27+&lt;span class=&#34;hljs-number&#34;&gt;144&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x031c&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00796&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$100&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_27+&lt;span class=&#34;hljs-number&#34;&gt;152&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//Bird的itab地址赋值给&lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;，再赋值给(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0328&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00808&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       LEAQ    go&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;itab.&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.Bird,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.Animal(SB), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x032f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00815&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, (&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0333&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00819&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       LEAQ    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_27+&lt;span class=&#34;hljs-number&#34;&gt;144&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;//把临时的Bird的地址赋值&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x033b&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00827&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;以itab和构造的Bird为参数调用 runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT2Inoptr&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0340&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00832&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt;    runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT2Inoptr(SB)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0345&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00837&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x034a&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00842&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;24&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x034f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00847&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.anim+&lt;span class=&#34;hljs-number&#34;&gt;432&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0357&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00855&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.anim+&lt;span class=&#34;hljs-number&#34;&gt;440&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;runtime.convT2Inoptr&lt;/strong&gt; 实现可以在runtime/iface.go文件下找到:&lt;/p&gt;
&lt;figure class=&#34;highlight maxima&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs maxima&#34;&gt;func convT2Inoptr(&lt;span class=&#34;hljs-built_in&#34;&gt;tab&lt;/span&gt; *itab, &lt;span class=&#34;hljs-built_in&#34;&gt;elem&lt;/span&gt; unsafe.Pointer) (i iface) &amp;#123;&lt;br&gt;	t := &lt;span class=&#34;hljs-built_in&#34;&gt;tab&lt;/span&gt;._type&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; raceenabled &amp;#123;&lt;br&gt;		raceReadObjectPC(t, &lt;span class=&#34;hljs-built_in&#34;&gt;elem&lt;/span&gt;, getcallerpc(), funcPC(convT2Inoptr))&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; msanenabled &amp;#123;&lt;br&gt;		msanread(&lt;span class=&#34;hljs-built_in&#34;&gt;elem&lt;/span&gt;, t.size)&lt;br&gt;	&amp;#125;&lt;br&gt;	x := mallocgc(t.size, t, &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;)&lt;br&gt;	memmove(x, &lt;span class=&#34;hljs-built_in&#34;&gt;elem&lt;/span&gt;, t.size)&lt;br&gt;	i.&lt;span class=&#34;hljs-built_in&#34;&gt;tab&lt;/span&gt; = &lt;span class=&#34;hljs-built_in&#34;&gt;tab&lt;/span&gt;&lt;br&gt;	i.data = x&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;return&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回的iface结构：&lt;/p&gt;
&lt;figure class=&#34;highlight gauss&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gauss&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;type&lt;/span&gt; iface &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;tab&lt;/span&gt;  *itab&lt;br&gt;	data unsafe.Pointer&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;type&lt;/span&gt; itab &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	inter *interfacetype&lt;br&gt;	_type *_type&lt;br&gt;	hash  uint32 &lt;span class=&#34;hljs-comment&#34;&gt;// copy of _type.hash. Used for type switches.&lt;/span&gt;&lt;br&gt;	_     [&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;]byte&lt;br&gt;	fun   [&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]uintptr &lt;span class=&#34;hljs-comment&#34;&gt;// variable sized. fun[0]==0 means _type does not implement inter.&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;变量anim在内存中的表示就是一个iface结构体&lt;/li&gt;
&lt;li&gt;从汇编代码可以看到itab信息是存储在SB(全局变量)中的&lt;/li&gt;
&lt;li&gt;anim的动态类型绑定就是通过在itab绑定类型信息实现的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;验证&#34;&gt;&lt;a href=&#34;#验证&#34; class=&#34;headerlink&#34; title=&#34;验证&#34;&gt;&lt;/a&gt;验证&lt;/h3&gt;&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;package&lt;/span&gt; main&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; (&lt;br&gt;	&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;unsafe&amp;quot;&lt;/span&gt;&lt;br&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; Animal &lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &amp;#123;&lt;br&gt;	sing()&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; Bird &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	color &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;	weight &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;(p Bird)&lt;/span&gt;&lt;span class=&#34;hljs-title&#34;&gt;sing&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	fmt.Printf( &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;bird&amp;#123;color: %d, weight:%d&amp;#125; is sing &amp;quot;&lt;/span&gt;, p.color, p.weight)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; itab &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	inter unsafe.Pointer&lt;br&gt;	_type unsafe.Pointer&lt;br&gt;	hash  &lt;span class=&#34;hljs-keyword&#34;&gt;uint32&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// copy of _type.hash. Used for type switches.&lt;/span&gt;&lt;br&gt;	_     [&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;]&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;&lt;br&gt;	fun   [&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// variable sized. fun[0]==0 means _type does not implement inter.&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; eface &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	tab  *itab&lt;br&gt;	data *Bird&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; anim Animal = Bird&amp;#123;color: &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, weight: &lt;span class=&#34;hljs-number&#34;&gt;1999&lt;/span&gt;&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; e = (*eface)(unsafe.Pointer(&amp;amp;anim))&lt;br&gt;	e.data.sing()&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果: bird{color: 1, weight:1999} is sing &lt;br&gt;&lt;br&gt;符合预期&lt;/p&gt;
</content>
        <updated>2021-04-23T12:22:42.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021-04-22-go-str-byte-md/</id>
        <title>go str与byte转换</title>
        <link rel="alternate" href="http://example.com/2021-04-22-go-str-byte-md/"/>
        <content type="html">&lt;h3 id=&#34;string与-byte的转换&#34;&gt;&lt;a href=&#34;#string与-byte的转换&#34; class=&#34;headerlink&#34; title=&#34;string与[]byte的转换&#34;&gt;&lt;/a&gt;string与[]byte的转换&lt;/h3&gt;&lt;h4 id=&#34;一般转换方式&#34;&gt;&lt;a href=&#34;#一般转换方式&#34; class=&#34;headerlink&#34; title=&#34;一般转换方式&#34;&gt;&lt;/a&gt;一般转换方式&lt;/h4&gt;&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;bytesFromStr := []&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcdefg&amp;quot;&lt;/span&gt;)&lt;br&gt;strFromBytes := &lt;span class=&#34;hljs-keyword&#34;&gt;string&lt;/span&gt;([]&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;97&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;98&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;99&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;&amp;#125;)&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;unsafe转换方式&#34;&gt;&lt;a href=&#34;#unsafe转换方式&#34; class=&#34;headerlink&#34; title=&#34;unsafe转换方式&#34;&gt;&lt;/a&gt;unsafe转换方式&lt;/h4&gt;&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; StringHeader &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	Data &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt;&lt;br&gt;	Len  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; SliceHeader &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	Data &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt;&lt;br&gt;	Len  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;	Cap  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;str2Bytes&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(s &lt;span class=&#34;hljs-keyword&#34;&gt;string&lt;/span&gt;)&lt;/span&gt; []&lt;span class=&#34;hljs-title&#34;&gt;byte&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	sh := (*StringHeader)(unsafe.Pointer(&amp;amp;s))&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; *(*[]&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;)(unsafe.Pointer(&amp;amp;SliceHeader&amp;#123;&lt;br&gt;		Data: sh.Data,&lt;br&gt;		Len: sh.Len,&lt;br&gt;		Cap: sh.Len,&lt;br&gt;	&amp;#125;))&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Bytes2Str&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(b []&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;)&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;string&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; *(*&lt;span class=&#34;hljs-keyword&#34;&gt;string&lt;/span&gt;)(unsafe.Pointer(&amp;amp;b))&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <updated>2021-04-22T14:10:34.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021-04-17-go-interface-md/</id>
        <title>go interface{}刨析</title>
        <link rel="alternate" href="http://example.com/2021-04-17-go-interface-md/"/>
        <content type="html">&lt;h3 id=&#34;初识interface&#34;&gt;&lt;a href=&#34;#初识interface&#34; class=&#34;headerlink&#34; title=&#34;初识interface{}&#34;&gt;&lt;/a&gt;初识interface{}&lt;/h3&gt;&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs reasonml&#34;&gt;func my&lt;span class=&#34;hljs-constructor&#34;&gt;Print(&lt;span class=&#34;hljs-params&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt; &amp;#123;&lt;br&gt;    fmt.&lt;span class=&#34;hljs-constructor&#34;&gt;Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%v&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-params&#34;&gt;val&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用过java的，第一感觉interface{}与Object的差不多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Object是任何对象的基类，所有对象都可以转成Object&lt;/li&gt;
&lt;li&gt;interface{}，表面看是一个空接口，而golang规定是只要实现了其方法就实现了该接口。即所有类型都实现了空接口，所以interface{}可接收指针，值对像，接口类型等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;interface-内部结构&#34;&gt;&lt;a href=&#34;#interface-内部结构&#34; class=&#34;headerlink&#34; title=&#34;interface{}内部结构&#34;&gt;&lt;/a&gt;interface{}内部结构&lt;/h3&gt;&lt;p&gt;我们使用interface{}，一般是通过reflect反射得到他的实际类型&lt;/p&gt;
&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs reasonml&#34;&gt;func &lt;span class=&#34;hljs-constructor&#34;&gt;PrintType(&lt;span class=&#34;hljs-params&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt; &amp;#123;&lt;br&gt;    fmt.&lt;span class=&#34;hljs-constructor&#34;&gt;Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-params&#34;&gt;reflect&lt;/span&gt;.TypeOf(&lt;span class=&#34;hljs-params&#34;&gt;arg&lt;/span&gt;)&lt;/span&gt;.&lt;span class=&#34;hljs-constructor&#34;&gt;String()&lt;/span&gt;)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;跟踪到TypeOf函数中：&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;TypeOf&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(i &lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Type&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	eface := *(*emptyInterface)(unsafe.Pointer(&amp;amp;i))&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; toType(eface.typ)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; emptyInterface &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	typ  *rtype&lt;br&gt;	word unsafe.Pointer&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; rtype &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	size       &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt;&lt;br&gt;	ptrdata    &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// number of bytes in the type that can contain pointers&lt;/span&gt;&lt;br&gt;	hash       &lt;span class=&#34;hljs-keyword&#34;&gt;uint32&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// hash of type; avoids computation in hash tables&lt;/span&gt;&lt;br&gt;	tflag      tflag   &lt;span class=&#34;hljs-comment&#34;&gt;// extra type information flags&lt;/span&gt;&lt;br&gt;	align      &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// alignment of variable with this type&lt;/span&gt;&lt;br&gt;	fieldAlign &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// alignment of struct field with this type&lt;/span&gt;&lt;br&gt;	kind       &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// enumeration for C&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// function for comparing objects of this type&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// (ptr to object A, ptr to object B) -&amp;gt; ==?&lt;/span&gt;&lt;br&gt;	equal     &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(unsafe.Pointer, unsafe.Pointer)&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;&lt;br&gt;	gcdata    *&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// garbage collection data&lt;/span&gt;&lt;br&gt;	str       nameOff &lt;span class=&#34;hljs-comment&#34;&gt;// string form&lt;/span&gt;&lt;br&gt;	ptrToThis typeOff &lt;span class=&#34;hljs-comment&#34;&gt;// type for pointer to this type, may be zero&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以发现interface{}的实际是一个emptyInterface的struct,下面做一下验证:&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//模仿上面自定义的结构体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; emptyInterface &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	typ  *rtype&lt;br&gt;	word unsafe.Pointer&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//模仿上面自定义的结构体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; rtype &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	size       &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt;&lt;br&gt;	ptrdata    &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// number of bytes in the type that can contain pointers&lt;/span&gt;&lt;br&gt;	hash       &lt;span class=&#34;hljs-keyword&#34;&gt;uint32&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// hash of type; avoids computation in hash tables&lt;/span&gt;&lt;br&gt;	tflag      &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// extra type information flags&lt;/span&gt;&lt;br&gt;	align      &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// alignment of variable with this type&lt;/span&gt;&lt;br&gt;	fieldAlign &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// alignment of struct field with this type&lt;/span&gt;&lt;br&gt;	kind       &lt;span class=&#34;hljs-keyword&#34;&gt;uint8&lt;/span&gt;&lt;br&gt;	equal     &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(unsafe.Pointer, unsafe.Pointer)&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;&lt;br&gt;	gcdata    *&lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// garbage collection data&lt;/span&gt;&lt;br&gt;	str       &lt;span class=&#34;hljs-keyword&#34;&gt;int32&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// string form&lt;/span&gt;&lt;br&gt;	ptrToThis &lt;span class=&#34;hljs-keyword&#34;&gt;int32&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;// type for pointer to this type, may be zero&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;transForm&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(obj &lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;emptyInterface&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//强制类型转换&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; (*emptyInterface)(unsafe.Pointer(&amp;amp;obj))&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;hljs-keyword&#34;&gt;uint64&lt;/span&gt; = &lt;span class=&#34;hljs-number&#34;&gt;999&lt;/span&gt;&lt;br&gt;	e := transForm(a)&lt;br&gt;    fmt.Println(reflect.Kind(e.typ.kind), *(*&lt;span class=&#34;hljs-keyword&#34;&gt;uint64&lt;/span&gt;)(e.word))&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//打印出来uint64 999&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;验证了我们和猜想，可以发现interface{}的数据是一个指针，那他是如何支持值赋值的呢？如果他只是把word指向了原数据，这又和golang值传递的方式相违背&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;interface-赋值过程&#34;&gt;&lt;a href=&#34;#interface-赋值过程&#34; class=&#34;headerlink&#34; title=&#34;interface{}赋值过程&#34;&gt;&lt;/a&gt;interface{}赋值过程&lt;/h3&gt;&lt;p&gt;为了搞清楚他是如何赋值的，我们写个demo一探究竟：&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;package&lt;/span&gt; main&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; TVal &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	a &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;&lt;br&gt;	b &lt;span class=&#34;hljs-keyword&#34;&gt;string&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;printFace&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(v &lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt;&lt;/span&gt;  &amp;#123;&lt;br&gt;	fmt.Println(v)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	val := TVal&amp;#123;a: &lt;span class=&#34;hljs-number&#34;&gt;1999&lt;/span&gt;, b: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcdefg&amp;quot;&lt;/span&gt;&amp;#125;&lt;br&gt;	printFace(TVal&amp;#123;a: &lt;span class=&#34;hljs-number&#34;&gt;1999&lt;/span&gt;, b: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcdefg&amp;quot;&lt;/span&gt;&amp;#125;)&lt;br&gt;	printFace(&amp;amp;val)&lt;br&gt;	t := &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;&lt;br&gt;	printFace(t)&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三种反汇编:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go build –gcflags=”-l -N” -o helloworld， 去掉优化&lt;/li&gt;
&lt;li&gt;go tool compile -N -S main.go，去掉优化&lt;/li&gt;
&lt;li&gt;go tool objdump -S test &amp;gt; abc.asm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;统一使用第二种方式。&lt;/p&gt;
&lt;h4 id=&#34;值传递分析&#34;&gt;&lt;a href=&#34;#值传递分析&#34; class=&#34;headerlink&#34; title=&#34;值传递分析&#34;&gt;&lt;/a&gt;值传递分析&lt;/h4&gt;&lt;p&gt;截取 &lt;strong&gt;printFace(TVal{a: 1999, b: “abcdefg”})&lt;/strong&gt; 汇编代码:&lt;/p&gt;
&lt;figure class=&#34;highlight x86asm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs x86asm&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00c6&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00198&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       PCDATA  &lt;span class=&#34;hljs-number&#34;&gt;$0&lt;/span&gt;, $-&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00c6&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00198&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;XORPS&lt;/span&gt;   X0, X0&lt;br&gt;//autotmp_23 可以看成是一个地址符号，基地址&lt;span class=&#34;hljs-number&#34;&gt;560&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00c9&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00201&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVUPS&lt;/span&gt;  X0, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;560&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00d1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00209&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;576&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//把&lt;span class=&#34;hljs-number&#34;&gt;1999&lt;/span&gt;赋值到地址&lt;span class=&#34;hljs-number&#34;&gt;560&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)上&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00dd&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00221&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$1999&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;560&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//字符串的地址(SB为全局变量, go&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;string.&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcdefg&amp;quot;&lt;/span&gt;可以看成地址符号),赋值给&lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00e9&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00233&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       LEAQ    go&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;string.&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcdefg&amp;quot;&lt;/span&gt;(SB), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;//字符串的地址赋值给&lt;span class=&#34;hljs-number&#34;&gt;568&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00f0&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00240&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;568&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//把字符串长度&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;赋值给&lt;span class=&#34;hljs-number&#34;&gt;576&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x00f8&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00248&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$7&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;576&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//获取struct TVal的类型元数据,&lt;br&gt;// autotmp_23的数据为 |&lt;span class=&#34;hljs-number&#34;&gt;1999&lt;/span&gt; (8&lt;span class=&#34;hljs-built_in&#34;&gt;byte&lt;/span&gt;)| str_addr (8&lt;span class=&#34;hljs-built_in&#34;&gt;byte&lt;/span&gt;) | &lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt; (8&lt;span class=&#34;hljs-built_in&#34;&gt;byte&lt;/span&gt;)|,其实就是struct &amp;#123;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, stringHeader&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0104&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00260&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       LEAQ    type.&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.TVal(SB), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;//TVal的类型元数据(_type)地址给&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x010b&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00267&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, (&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x010f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00271&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       LEAQ    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_23+&lt;span class=&#34;hljs-number&#34;&gt;560&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;//autotmp_23地址赋值给&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0117&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00279&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x011c&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00284&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       PCDATA  &lt;span class=&#34;hljs-number&#34;&gt;$1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;$1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x011c&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00284&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;NOP&lt;/span&gt;&lt;br&gt;//调用runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT2E，参数为(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)(*_type), &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)（struct &amp;#123;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, stringHeader&amp;#125;指针）&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0120&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00288&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt;    runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT2E(SB)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0125&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00293&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x012a&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00298&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;24&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x012f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00303&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_28+&lt;span class=&#34;hljs-number&#34;&gt;432&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0137&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00311&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_28+&lt;span class=&#34;hljs-number&#34;&gt;440&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x013f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00319&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;224&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0147&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00327&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;232&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后调用runtime.convT2E，看一下源码:&lt;/p&gt;
&lt;figure class=&#34;highlight rust&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs rust&#34;&gt;func convT2E(t *_&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt;, elem &lt;span class=&#34;hljs-keyword&#34;&gt;unsafe&lt;/span&gt;.Pointer) (e eface) &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; raceenabled &amp;#123;&lt;br&gt;		raceReadObjectPC(t, elem, getcallerpc(), funcPC(convT2E))&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; msanenabled &amp;#123;&lt;br&gt;		msanread(elem, t.size)&lt;br&gt;	&amp;#125;&lt;br&gt;	x := mallocgc(t.size, t, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;)&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// &lt;span class=&#34;hljs-doctag&#34;&gt;TODO:&lt;/span&gt; We allocate a zeroed object only to overwrite it with actual data.&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Figure out how to avoid zeroing. Also below in convT2Eslice, convT2I, convT2Islice.&lt;/span&gt;&lt;br&gt;	typedmemmove(t, x, elem)&lt;br&gt;	e._&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; = t&lt;br&gt;	e.data = x&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;eface&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;	_&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; *_&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt;&lt;br&gt;	data  &lt;span class=&#34;hljs-keyword&#34;&gt;unsafe&lt;/span&gt;.Pointer&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;** 可以发现里面申请了一块sizeof(type)大小的内存，并初始化为elem。&lt;br&gt;返回值eface和前面的emptyInterface一样 **&lt;/p&gt;
&lt;h4 id=&#34;指针传递分析&#34;&gt;&lt;a href=&#34;#指针传递分析&#34; class=&#34;headerlink&#34; title=&#34;指针传递分析&#34;&gt;&lt;/a&gt;指针传递分析&lt;/h4&gt;&lt;p&gt;截取 &lt;strong&gt;printFace(&amp;amp;val)&lt;/strong&gt; 汇编代码:&lt;/p&gt;
&lt;figure class=&#34;highlight x86asm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs x86asm&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02a9&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00681&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       PCDATA  &lt;span class=&#34;hljs-number&#34;&gt;$1&lt;/span&gt;, $-&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02a9&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00681&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;JMP&lt;/span&gt;     &lt;span class=&#34;hljs-number&#34;&gt;683&lt;/span&gt;&lt;br&gt;//val地址赋值给&lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02ab&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00683&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.&amp;amp;val+&lt;span class=&#34;hljs-number&#34;&gt;152&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;//&lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;赋值给&lt;span class=&#34;hljs-number&#34;&gt;144&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02b3&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00691&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_26+&lt;span class=&#34;hljs-number&#34;&gt;144&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//struct TVal的类型元数据指针赋值给&lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02bb&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00699&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       LEAQ    type.*&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.TVal(SB), &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;&lt;br&gt;//&lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;，即struct TVal的类型元数据指针，赋值给 &lt;span class=&#34;hljs-number&#34;&gt;400&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02c2&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00706&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_32+&lt;span class=&#34;hljs-number&#34;&gt;400&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//&lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;，即val的地址赋值给 &lt;span class=&#34;hljs-number&#34;&gt;408&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02ca&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00714&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_32+&lt;span class=&#34;hljs-number&#34;&gt;408&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02d2&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00722&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;240&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x02da&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;00730&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;248&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出只是地址赋值操作&lt;/p&gt;
&lt;h4 id=&#34;基本类型传递分析&#34;&gt;&lt;a href=&#34;#基本类型传递分析&#34; class=&#34;headerlink&#34; title=&#34;基本类型传递分析&#34;&gt;&lt;/a&gt;基本类型传递分析&lt;/h4&gt;&lt;p&gt;截取 ** printFace(t) ** 汇编代码:&lt;/p&gt;
&lt;figure class=&#34;highlight x86asm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs x86asm&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x046e&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01134&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$1999&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.t+&lt;span class=&#34;hljs-number&#34;&gt;64&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0477&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01143&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;$1999&lt;/span&gt;, (&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x047f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01151&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       PCDATA  &lt;span class=&#34;hljs-number&#34;&gt;$1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;$0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x047f&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01151&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;NOP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0480&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01152&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt;    runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT64(SB)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0485&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01157&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;), &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x048a&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01162&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_38+&lt;span class=&#34;hljs-number&#34;&gt;136&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;//类型元数据地址赋值是一样的&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0492&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01170&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       LEAQ    type&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;(SB), &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x0499&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01177&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_37+&lt;span class=&#34;hljs-number&#34;&gt;384&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x04a1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01185&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;..autotmp_37+&lt;span class=&#34;hljs-number&#34;&gt;392&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x04a9&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01193&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;CX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;224&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;0x04b1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;01201&lt;/span&gt; (main&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;)       &lt;span class=&#34;hljs-keyword&#34;&gt;MOVQ&lt;/span&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;AX&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.v+&lt;span class=&#34;hljs-number&#34;&gt;232&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;SP&lt;/span&gt;)&lt;br&gt;&lt;br&gt;//runtime&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;convT64在runtime/iface&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;go下&lt;br&gt;func convT64(val uint64) (x unsafe&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;Pointer) &amp;#123;&lt;br&gt;	if val &amp;lt; uint64(len(staticuint64s)) &amp;#123;&lt;br&gt;		x = unsafe&lt;span class=&#34;hljs-number&#34;&gt;.&lt;/span&gt;Pointer(&amp;amp;staticuint64s[val])&lt;br&gt;	&amp;#125; else &amp;#123;&lt;br&gt;		x = mallocgc(&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;, uint64Type, false)&lt;br&gt;		*(*uint64)(x) = val&lt;br&gt;	&amp;#125;&lt;br&gt;	return&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在runtime/iface.go有一系列的convTXXX方法，用于不同的类型。其主要目的是为了利用缓存，避免频繁的内存分配&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;struct { a int}&lt;/strong&gt; 这样的结构也适用于这种情况&lt;/li&gt;
&lt;li&gt;常量的情况，会是一个全局变量的指针赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;interface{}在实际中是一个eface的结构体。&lt;/li&gt;
&lt;li&gt;interface{}更像一个包装类&lt;/li&gt;
&lt;li&gt;主要通过reflect来操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考资料:&lt;br&gt;&lt;a href=&#34;https://lrita.github.io/2017/12/12/golang-asm/&#34;&gt;https://lrita.github.io/2017/12/12/golang-asm/&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2021-04-17T12:59:21.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021-04-16-go-chan-md/</id>
        <title>go channel</title>
        <link rel="alternate" href="http://example.com/2021-04-16-go-chan-md/"/>
        <content type="html">&lt;h3 id=&#34;channel的功能及使用&#34;&gt;&lt;a href=&#34;#channel的功能及使用&#34; class=&#34;headerlink&#34; title=&#34;channel的功能及使用&#34;&gt;&lt;/a&gt;channel的功能及使用&lt;/h3&gt;&lt;p&gt;channel是golang里面实现并发的基础，他主要用于在goroutine之间通信&lt;br&gt;。他与rust中的Channel非常相似，不知道谁模仿谁的。&lt;/p&gt;
&lt;p&gt; channel的使用方式：&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//myChan 本身是一个指针，可以随意在函数参数中传递&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//无缓存的chan&lt;/span&gt;&lt;br&gt;myChan := &lt;span class=&#34;hljs-built_in&#34;&gt;make&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//有缓存的chan&lt;/span&gt;&lt;br&gt;myChan := &lt;span class=&#34;hljs-built_in&#34;&gt;make&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//定义只读/写 chan没有意义，一般用于在函数传递中限制chan的行为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//只写chan&lt;/span&gt;&lt;br&gt;myChan := &lt;span class=&#34;hljs-built_in&#34;&gt;make&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;chan&lt;/span&gt; &amp;lt;- &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//只读chan&lt;/span&gt;&lt;br&gt;myChan := &lt;span class=&#34;hljs-built_in&#34;&gt;make&lt;/span&gt;(&amp;lt;- &lt;span class=&#34;hljs-keyword&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//发送数据到通道中&lt;/span&gt;&lt;br&gt;myChan &amp;lt;- &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用阻塞方式从通道中读取数据&lt;/span&gt;&lt;br&gt;myBlockData := &amp;lt;- myChan&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//忽略读取的数据&lt;/span&gt;&lt;br&gt;&amp;lt;-myChan&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用非阻塞方式从通道中读取数据,一般使用select而非这种方式&lt;/span&gt;&lt;br&gt;myNoBlockData, ok := &amp;lt;- myChan&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//循环接收数据， 没有数据时会阻塞，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//自己设计条件退出循环,或者调用close(myChan)后也会退出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; data := &lt;span class=&#34;hljs-keyword&#34;&gt;range&lt;/span&gt; myChan &amp;#123;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//关闭chan&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;close&lt;/span&gt;(myChan)&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;chan的缓存&#34;&gt;&lt;a href=&#34;#chan的缓存&#34; class=&#34;headerlink&#34; title=&#34;chan的缓存&#34;&gt;&lt;/a&gt;chan的缓存&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;无缓存的情况，当没有chan的读操作取时，chan的数据的写入会阻塞&lt;/li&gt;
&lt;li&gt;无缓存的情况，当没有chan的写操作取时，chan的数据的读入会阻塞&lt;/li&gt;
&lt;li&gt;有缓存的情况，类似于生产者和消费者模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;其他注意事项&#34;&gt;&lt;a href=&#34;#其他注意事项&#34; class=&#34;headerlink&#34; title=&#34;其他注意事项&#34;&gt;&lt;/a&gt;其他注意事项&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;给关闭的chan发消息会panic&lt;/li&gt;
&lt;li&gt;从已关闭的chan读消息,读出来的值为chan通道类型的空值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;channel的实现&#34;&gt;&lt;a href=&#34;#channel的实现&#34; class=&#34;headerlink&#34; title=&#34;channel的实现&#34;&gt;&lt;/a&gt;channel的实现&lt;/h3&gt;&lt;p&gt;channel的源码实现在runtime/chan.go下面&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; hchan &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;br&gt;	qcount   &lt;span class=&#34;hljs-keyword&#34;&gt;uint&lt;/span&gt;           &lt;span class=&#34;hljs-comment&#34;&gt;// total data in the queue&lt;/span&gt;&lt;br&gt;	dataqsiz &lt;span class=&#34;hljs-keyword&#34;&gt;uint&lt;/span&gt;           &lt;span class=&#34;hljs-comment&#34;&gt;// size of the circular queue&lt;/span&gt;&lt;br&gt;	buf      unsafe.Pointer &lt;span class=&#34;hljs-comment&#34;&gt;// points to an array of dataqsiz elements&lt;/span&gt;&lt;br&gt;	elemsize &lt;span class=&#34;hljs-keyword&#34;&gt;uint16&lt;/span&gt;&lt;br&gt;	closed   &lt;span class=&#34;hljs-keyword&#34;&gt;uint32&lt;/span&gt;&lt;br&gt;	elemtype *_type &lt;span class=&#34;hljs-comment&#34;&gt;// element type&lt;/span&gt;&lt;br&gt;	sendx    &lt;span class=&#34;hljs-keyword&#34;&gt;uint&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// send index&lt;/span&gt;&lt;br&gt;	recvx    &lt;span class=&#34;hljs-keyword&#34;&gt;uint&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;// receive index&lt;/span&gt;&lt;br&gt;	recvq    waitq  &lt;span class=&#34;hljs-comment&#34;&gt;// list of recv waiters&lt;/span&gt;&lt;br&gt;	sendq    waitq  &lt;span class=&#34;hljs-comment&#34;&gt;// list of send waiters&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// lock protects all fields in hchan, as well as several&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// fields in sudogs blocked on this channel.&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Do not change another G&amp;#x27;s status while holding this lock&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// (in particular, do not ready a G), as this can deadlock&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// with stack shrinking.&lt;/span&gt;&lt;br&gt;	lock mutex&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;channel的创建过程&#34;&gt;&lt;a href=&#34;#channel的创建过程&#34; class=&#34;headerlink&#34; title=&#34;channel的创建过程&#34;&gt;&lt;/a&gt;channel的创建过程&lt;/h3&gt;&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs arduino&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;func &lt;span class=&#34;hljs-title&#34;&gt;makechan&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(t *chantype, size &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;/span&gt; *hchan &lt;/span&gt;&amp;#123;&lt;br&gt;	elem := t.elem&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// compiler checks this but be safe.&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; elem.size &amp;gt;= &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt; &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;makechan: invalid channel element type&amp;quot;&lt;/span&gt;)&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; hchanSize%maxAlign != &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; || elem.align &amp;gt; maxAlign &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;makechan: bad alignment&amp;quot;&lt;/span&gt;)&lt;br&gt;	&amp;#125;&lt;br&gt;&lt;br&gt;	mem, overflow := math.&lt;span class=&#34;hljs-built_in&#34;&gt;MulUintptr&lt;/span&gt;(elem.size, &lt;span class=&#34;hljs-built_in&#34;&gt;uintptr&lt;/span&gt;(size))&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; overflow || mem &amp;gt; maxAlloc-hchanSize || size &amp;lt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;panic&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;plainError&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;makechan: size out of range&amp;quot;&lt;/span&gt;))&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;br&gt;	var c *hchan&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;switch&lt;/span&gt; &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;case&lt;/span&gt; mem == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;:&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Queue or element size is zero.&lt;/span&gt;&lt;br&gt;		c = (*hchan)(&lt;span class=&#34;hljs-built_in&#34;&gt;mallocgc&lt;/span&gt;(hchanSize, nil, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;))&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Race detector uses this location for synchronization.&lt;/span&gt;&lt;br&gt;		c.buf = c.&lt;span class=&#34;hljs-built_in&#34;&gt;raceaddr&lt;/span&gt;()&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;case&lt;/span&gt; elem.ptrdata == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;:&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Elements do not contain pointers.&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Allocate hchan and buf in one call.&lt;/span&gt;&lt;br&gt;		c = (*hchan)(&lt;span class=&#34;hljs-built_in&#34;&gt;mallocgc&lt;/span&gt;(hchanSize+mem, nil, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;))&lt;br&gt;		c.buf = &lt;span class=&#34;hljs-built_in&#34;&gt;add&lt;/span&gt;(unsafe.&lt;span class=&#34;hljs-built_in&#34;&gt;Pointer&lt;/span&gt;(c), hchanSize)&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;default&lt;/span&gt;:&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Elements contain pointers.&lt;/span&gt;&lt;br&gt;		c = &lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt;&lt;/span&gt;(hchan)&lt;br&gt;		c.buf = &lt;span class=&#34;hljs-built_in&#34;&gt;mallocgc&lt;/span&gt;(mem, elem, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;)&lt;br&gt;	&amp;#125;&lt;br&gt;&lt;br&gt;	c.elemsize = &lt;span class=&#34;hljs-built_in&#34;&gt;uint16&lt;/span&gt;(elem.size)&lt;br&gt;	c.elemtype = elem&lt;br&gt;	c.dataqsiz = &lt;span class=&#34;hljs-built_in&#34;&gt;uint&lt;/span&gt;(size)&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;lockInit&lt;/span&gt;(&amp;amp;c.lock, lockRankHchan)&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; debugChan &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;makechan: chan=&amp;quot;&lt;/span&gt;, c, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;; elemsize=&amp;quot;&lt;/span&gt;, elem.size, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;; dataqsiz=&amp;quot;&lt;/span&gt;, size, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;)&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; c&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;先判断容量大小&lt;/li&gt;
&lt;li&gt;计算chan队列需要的缓存大小&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;如果为空队列， 则直接用mallocgc分配一个hchan的对像&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;如果缓存的元素不是指针类型的，则直接用mallocgc分配一整块内存（包括hchan和队列&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;元素包含指针，则先在堆上分配一个hchan对像,再用mallocgc分配chan队列的大小&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;mallocgc分两种情况，size较小时直接从P的缓存列表中获取，较大时 (&amp;gt;32 kB)直接在堆上分配&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;channel的缓存&#34;&gt;&lt;a href=&#34;#channel的缓存&#34; class=&#34;headerlink&#34; title=&#34;channel的缓存&#34;&gt;&lt;/a&gt;channel的缓存&lt;/h3&gt;&lt;p&gt;hchan中与缓存有关的字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buf 环形队列的地址&lt;/li&gt;
&lt;li&gt;sendx 环形队列的发送地址&lt;/li&gt;
&lt;li&gt;recvx 环形队列的接受地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据代码可以得面缓存的结构如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://note.youdao.com/yws/public/resource/70e1ba4f25d0499b923cafcb2cfa8c7c/xmlnote/WEBRESOURCE94bf6c743675b23712b98382c174bd89/4832&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;至于为什么会根据元素类型中包含指针来设计不同的结构，我觉得主要原因是考虑gc时会改变指针的地址。&lt;/p&gt;
&lt;h3 id=&#34;chan的发送过程&#34;&gt;&lt;a href=&#34;#chan的发送过程&#34; class=&#34;headerlink&#34; title=&#34;chan的发送过程&#34;&gt;&lt;/a&gt;chan的发送过程&lt;/h3&gt;&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;chansend&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(c *hchan, ep unsafe.Pointer, block &lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt;, callerpc &lt;span class=&#34;hljs-keyword&#34;&gt;uintptr&lt;/span&gt;)&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;bool&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	...&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//非阻塞，未关闭，且缓存满了直接返回&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; !block &amp;amp;&amp;amp; c.closed == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; full(c) &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;    ...&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//操作之前先锁住&lt;/span&gt;&lt;br&gt;	lock(&amp;amp;c.lock)&lt;br&gt;    ...&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//从接收队列中取一个接收者，把消息发送给他&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; sg := c.recvq.dequeue(); sg != &lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt; &amp;#123;&lt;br&gt;		send(c, sg, ep, &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123; unlock(&amp;amp;c.lock) &amp;#125;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;    ...&lt;br&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;//没有接收者时，队列未满，则入缓存队列&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c.qcount &amp;lt; c.dataqsiz &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Space is available in the channel buffer. Enqueue the element to send.&lt;/span&gt;&lt;br&gt;		qp := chanbuf(c, c.sendx)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; raceenabled &amp;#123;&lt;br&gt;			raceacquire(qp)&lt;br&gt;			racerelease(qp)&lt;br&gt;		&amp;#125;&lt;br&gt;		typedmemmove(c.elemtype, qp, ep)&lt;br&gt;		c.sendx++&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c.sendx == c.dataqsiz &amp;#123;&lt;br&gt;			c.sendx = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;		&amp;#125;&lt;br&gt;		c.qcount++&lt;br&gt;		unlock(&amp;amp;c.lock)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;    ...&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// 获取与当前的goroutine相关的sudog并入到发送等待队列&lt;/span&gt;&lt;br&gt;	gp := getg()&lt;br&gt;	mysg := acquireSudog()&lt;br&gt;	...&lt;br&gt;	c.sendq.enqueue(mysg)&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//通知P阻塞，并阻塞住&lt;/span&gt;&lt;br&gt;	atomic.Store8(&amp;amp;gp.parkingOnChan, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&lt;br&gt;	gopark(chanparkcommit, unsafe.Pointer(&amp;amp;c.lock), waitReasonChanSend, traceEvGoBlockSend, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;)&lt;br&gt;	...&lt;br&gt;	&lt;br&gt;	releaseSudog(mysg)&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h3 id=&#34;channel的接收过程&#34;&gt;&lt;a href=&#34;#channel的接收过程&#34; class=&#34;headerlink&#34; title=&#34;channel的接收过程&#34;&gt;&lt;/a&gt;channel的接收过程&lt;/h3&gt;&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs go&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;chanrecv&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(c *hchan, ep unsafe.Pointer, block &lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt;)&lt;/span&gt; &lt;span class=&#34;hljs-params&#34;&gt;(selected, received &lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;	...&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//非阻塞&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//无缓存情况时无发送等待 或 缓存为空&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; !block &amp;amp;&amp;amp; empty(c) &amp;#123;&lt;br&gt;	    &lt;span class=&#34;hljs-comment&#34;&gt;//没关闭，直接返回&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; atomic.Load(&amp;amp;c.closed) == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;#123;&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt;&lt;br&gt;		&amp;#125;&lt;br&gt;	     &lt;span class=&#34;hljs-comment&#34;&gt;//关闭，则产生select事件&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; empty(c) &amp;#123;&lt;br&gt;		    ...&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;&lt;br&gt;		&amp;#125;&lt;br&gt;	&amp;#125;&lt;br&gt;    ...&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//操作前先锁住&lt;/span&gt;&lt;br&gt;	lock(&amp;amp;c.lock)&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//关闭了且缓存为空,产生select事件&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c.closed != &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; c.qcount == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;#123;&lt;br&gt;		...&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//从发送等待队列中取出发送者,把数据给ep(接受者数据地址)&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; sg := c.sendq.dequeue(); sg != &lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt; &amp;#123;&lt;br&gt;	    ...&lt;br&gt;		recv(c, sg, ep, &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123; unlock(&amp;amp;c.lock) &amp;#125;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//没有发送者时，当缓存中有数据时,从缓存中取一个数据&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c.qcount &amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;// Receive directly from queue&lt;/span&gt;&lt;br&gt;		qp := chanbuf(c, c.recvx)&lt;br&gt;	    ...&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ep != &lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt; &amp;#123;&lt;br&gt;			typedmemmove(c.elemtype, ep, qp)&lt;br&gt;		&amp;#125;&lt;br&gt;		typedmemclr(c.elemtype, qp)&lt;br&gt;		c.recvx++&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c.recvx == c.dataqsiz &amp;#123;&lt;br&gt;			c.recvx = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;		&amp;#125;&lt;br&gt;		c.qcount--&lt;br&gt;		unlock(&amp;amp;c.lock)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//缓存中也没有数据时,获取一个与当前goroutine相关的sudog，并入到接收队列中&lt;/span&gt;&lt;br&gt;	gp := getg()&lt;br&gt;	mysg := acquireSudog()&lt;br&gt;    ...&lt;br&gt;	c.recvq.enqueue(mysg)&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//通知P阻塞，并阻塞住&lt;/span&gt;&lt;br&gt;	atomic.Store8(&amp;amp;gp.parkingOnChan, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&lt;br&gt;	gopark(chanparkcommit, unsafe.Pointer(&amp;amp;c.lock), waitReasonChanReceive, traceEvGoBlockRecv, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;)&lt;br&gt;    ...&lt;br&gt;    阻塞完后，说明有数据来了，产生&lt;span class=&#34;hljs-keyword&#34;&gt;select&lt;/span&gt;事件&lt;br&gt;	releaseSudog(mysg)&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;, !closed&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;chan的关闭过程&#34;&gt;&lt;a href=&#34;#chan的关闭过程&#34; class=&#34;headerlink&#34; title=&#34;chan的关闭过程&#34;&gt;&lt;/a&gt;chan的关闭过程&lt;/h3&gt;&lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;func closechan(c *hchan) &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//关闭一个空的chan会崩溃&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c == nil &amp;#123;&lt;br&gt;		panic(plainError(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;close of nil channel&amp;quot;&lt;/span&gt;))&lt;br&gt;	&amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//操作之前先锁住&lt;/span&gt;&lt;br&gt;	lock(&amp;amp;c.lock)&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//关闭一个关闭的chan也会崩溃&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; c&lt;span class=&#34;hljs-selector-class&#34;&gt;.closed&lt;/span&gt; != &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; &amp;#123;&lt;br&gt;		unlock(&amp;amp;c.lock)&lt;br&gt;		panic(plainError(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;close of closed channel&amp;quot;&lt;/span&gt;))&lt;br&gt;	&amp;#125;&lt;br&gt;    ...&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//设置为关闭&lt;/span&gt;&lt;br&gt;	c&lt;span class=&#34;hljs-selector-class&#34;&gt;.closed&lt;/span&gt; = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-selector-tag&#34;&gt;var&lt;/span&gt; glist gList&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// 释放所有的接收者&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; &amp;#123;&lt;br&gt;		sg := c&lt;span class=&#34;hljs-selector-class&#34;&gt;.recvq&lt;/span&gt;&lt;span class=&#34;hljs-selector-class&#34;&gt;.dequeue&lt;/span&gt;()&lt;br&gt;	    ...&lt;br&gt;		glist&lt;span class=&#34;hljs-selector-class&#34;&gt;.push&lt;/span&gt;(gp)&lt;br&gt;	&amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//// 释放所有的发送等待者，他们会panic&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; &amp;#123;&lt;br&gt;		sg := c&lt;span class=&#34;hljs-selector-class&#34;&gt;.sendq&lt;/span&gt;&lt;span class=&#34;hljs-selector-class&#34;&gt;.dequeue&lt;/span&gt;()&lt;br&gt;		...&lt;br&gt;		glist&lt;span class=&#34;hljs-selector-class&#34;&gt;.push&lt;/span&gt;(gp)&lt;br&gt;	&amp;#125;&lt;br&gt;	unlock(&amp;amp;c.lock)&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Ready all Gs now that we&amp;#x27;ve dropped the channel lock.&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; !glist&lt;span class=&#34;hljs-selector-class&#34;&gt;.empty&lt;/span&gt;() &amp;#123;&lt;br&gt;		gp := glist&lt;span class=&#34;hljs-selector-class&#34;&gt;.pop&lt;/span&gt;()&lt;br&gt;		gp&lt;span class=&#34;hljs-selector-class&#34;&gt;.schedlink&lt;/span&gt; = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;		goready(gp, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;)&lt;br&gt;	&amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


</content>
        <updated>2021-04-16T14:06:41.000Z</updated>
    </entry>
</feed>
